"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFont = getFont;
exports["default"] = getStyles;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SIZE = '14px';
var TYPE = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif';

function getFont(_ref) {
  var _ref$fontSize = _ref.fontSize,
      fontSize = _ref$fontSize === void 0 ? SIZE : _ref$fontSize,
      _ref$fontFamily = _ref.fontFamily,
      fontFamily = _ref$fontFamily === void 0 ? TYPE : _ref$fontFamily;
  return "bold ".concat(fontSize, " ").concat(fontFamily);
}

function getStyles(_ref2) {
  var _ref2$bgColor = _ref2.bgColor,
      bgColor = _ref2$bgColor === void 0 ? '#fff' : _ref2$bgColor,
      _ref2$lineColor = _ref2.lineColor,
      lineColor = _ref2$lineColor === void 0 ? '#eee' : _ref2$lineColor,
      _ref2$redLineColor = _ref2.redLineColor,
      redLineColor = _ref2$redLineColor === void 0 ? '#f04134' : _ref2$redLineColor,
      _ref2$groupBack = _ref2.groupBack,
      groupBack = _ref2$groupBack === void 0 ? '#3db9d3' : _ref2$groupBack,
      _ref2$groupFront = _ref2.groupFront,
      groupFront = _ref2$groupFront === void 0 ? '#299cb4' : _ref2$groupFront,
      _ref2$taskBack = _ref2.taskBack,
      taskBack = _ref2$taskBack === void 0 ? '#65c16f' : _ref2$taskBack,
      _ref2$taskFront = _ref2.taskFront,
      taskFront = _ref2$taskFront === void 0 ? '#46ad51' : _ref2$taskFront,
      _ref2$milestone = _ref2.milestone,
      milestone = _ref2$milestone === void 0 ? '#d33daf' : _ref2$milestone,
      _ref2$warning = _ref2.warning,
      warning = _ref2$warning === void 0 ? '#faad14' : _ref2$warning,
      _ref2$danger = _ref2.danger,
      danger = _ref2$danger === void 0 ? '#f5222d' : _ref2$danger,
      _ref2$link = _ref2.link,
      link = _ref2$link === void 0 ? '#ffa011' : _ref2$link,
      _ref2$textColor = _ref2.textColor,
      textColor = _ref2$textColor === void 0 ? '#222' : _ref2$textColor,
      _ref2$lightTextColor = _ref2.lightTextColor,
      lightTextColor = _ref2$lightTextColor === void 0 ? '#999' : _ref2$lightTextColor,
      _ref2$lineWidth = _ref2.lineWidth,
      lineWidth = _ref2$lineWidth === void 0 ? '1px' : _ref2$lineWidth,
      _ref2$thickLineWidth = _ref2.thickLineWidth,
      thickLineWidth = _ref2$thickLineWidth === void 0 ? '1.4px' : _ref2$thickLineWidth,
      _ref2$fontSize = _ref2.fontSize,
      fontSize = _ref2$fontSize === void 0 ? SIZE : _ref2$fontSize,
      _ref2$smallFontSize = _ref2.smallFontSize,
      smallFontSize = _ref2$smallFontSize === void 0 ? '12px' : _ref2$smallFontSize,
      _ref2$fontFamily = _ref2.fontFamily,
      fontFamily = _ref2$fontFamily === void 0 ? TYPE : _ref2$fontFamily,
      _ref2$whiteSpace = _ref2.whiteSpace,
      whiteSpace = _ref2$whiteSpace === void 0 ? 'pre' : _ref2$whiteSpace;
  var line = {
    stroke: lineColor,
    'stroke-width': lineWidth
  };
  var redLine = {
    stroke: redLineColor,
    'stroke-width': lineWidth
  };
  var thickLine = {
    stroke: lineColor,
    'stroke-width': thickLineWidth
  };
  var text = {
    fill: textColor,
    'dominant-baseline': 'central',
    'font-size': fontSize,
    'font-family': fontFamily,
    'white-space': whiteSpace
  };
  var smallText = {
    fill: lightTextColor,
    'font-size': smallFontSize
  };
  return {
    week: {
      fill: 'rgba(252, 248, 227, .6)'
    },
    box: _objectSpread(_objectSpread({}, thickLine), {}, {
      fill: bgColor
    }),
    line: line,
    cline: redLine,
    bline: thickLine,
    label: text,
    groupLabel: _objectSpread(_objectSpread({}, text), {}, {
      'font-weight': '600'
    }),
    text1: _objectSpread(_objectSpread(_objectSpread({}, text), smallText), {}, {
      'text-anchor': 'end'
    }),
    text2: _objectSpread(_objectSpread({}, text), smallText),
    text3: _objectSpread(_objectSpread(_objectSpread({}, text), smallText), {}, {
      'text-anchor': 'middle'
    }),
    link: {
      stroke: link,
      'stroke-width': '1.5px',
      fill: 'none'
    },
    linkArrow: {
      fill: link
    },
    milestone: {
      fill: milestone
    },
    groupBack: {
      fill: groupBack
    },
    groupFront: {
      fill: groupFront
    },
    taskBack: {
      fill: taskBack
    },
    taskFront: {
      fill: taskFront
    },
    warning: {
      fill: warning
    },
    danger: {
      fill: danger
    },
    ctrl: {
      display: 'none',
      fill: '#f0f0f0',
      stroke: '#929292',
      'stroke-width': '1px'
    }
  };
}