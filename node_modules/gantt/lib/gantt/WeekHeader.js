"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = WeekHeader;

var _h = _interopRequireDefault(require("../h"));

var _utils = require("../utils");

var _YearMonth = _interopRequireDefault(require("./YearMonth"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function WeekHeader(_ref) {
  var styles = _ref.styles,
      unit = _ref.unit,
      minTime = _ref.minTime,
      maxTime = _ref.maxTime,
      height = _ref.height,
      offsetY = _ref.offsetY,
      maxTextWidth = _ref.maxTextWidth;
  var dates = (0, _utils.getDates)(minTime, maxTime);
  var weeks = dates.filter(function (v) {
    return new Date(v).getDay() === 0;
  });
  weeks.push(maxTime);
  var ticks = [];
  var x0 = maxTextWidth;
  var y0 = offsetY;
  var RH = height - y0;
  var d = _utils.DAY / unit;
  var len = weeks.length - 1;

  for (var i = 0; i < len; i++) {
    var cur = new Date(weeks[i]);
    var x = x0 + (weeks[i] - minTime) / unit;
    var curDay = cur.getDate();
    var prevDay = (0, _utils.addDays)(cur, -1).getDate();
    ticks.push((0, _h["default"])("g", null, (0, _h["default"])("rect", {
      x: x - d,
      y: y0,
      width: d * 2,
      height: RH,
      style: styles.week
    }), (0, _h["default"])("line", {
      x1: x,
      x2: x,
      y1: offsetY / 2,
      y2: offsetY,
      style: styles.line
    }), (0, _h["default"])("text", {
      x: x + 3,
      y: offsetY * 0.75,
      style: styles.text2
    }, curDay), x - x0 > 28 ? (0, _h["default"])("text", {
      x: x - 3,
      y: offsetY * 0.75,
      style: styles.text1
    }, prevDay) : null));
  }

  return (0, _h["default"])("g", null, (0, _h["default"])(_YearMonth["default"], {
    styles: styles,
    unit: unit,
    dates: dates,
    offsetY: offsetY,
    minTime: minTime,
    maxTime: maxTime,
    maxTextWidth: maxTextWidth
  }), ticks);
}